{"version":3,"sources":["redux/actionTypes.js","components/Todo.js","redux/actionCreators.js","components/TodoForm.js","App.js","redux/reducers/todos.js","redux/reducers/todoFilters.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["ADD_TODO","TOGGLE_TODO","DELETE_TODO","FILTER_TODO","CLEAR_TODO","TodoItemWrapper","styled","div","props","isCompleted","Checkbutton","TodoContent","TodoButtons","DeleteButton","button","EditButton","Todo","todo","dispatch","useDispatch","data-id","id","onClick","type","payload","content","Form","form","AddButton","TodoInputField","input","TodoForm","useState","value","setValue","onSubmit","e","preventDefault","trim","onChange","target","placeholder","TodoWrapper","TodoList","StatusWrapper","AllTodo","CompletedTodo","IncompletedTodo","BtnClean","App","todoId","todos","useSelector","state","todoState","console","log","selectorFilters","filter","useEffect","window","localStorage","setItem","JSON","stringify","StoreToLocalstorage","handleFilter","filterTodo","map","getItem","dataLength","parse","length","initState","initialState","combineReducers","action","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6996eb12.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const DELETE_TODO = \"DELETE_TODO\";\nexport const FILTER_TODO = \"FILTER_TODO\";\nexport const CLEAR_TODO = \"CLEAR_TODO\";\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FaRegTrashAlt, FaEdit, FaRegCircle, FaCircle } from \"react-icons/fa\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleTodo, deleteTodo } from \"../redux/actionCreators\";\n\nconst TodoItemWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 12px 8px;\n  margin-bottom: 16px;\n  border-radius: 5px;\n  &:hover button {\n    visibility: visible;\n  }\n  background-color: ${(props) => (props.isCompleted ? \"#cccccc\" : \"#444444\")};\n`;\n\nconst Checkbutton = styled.div`\n  margin-right: 12px;\n  color: ${(props) => (props.isCompleted ? \"green\" : \"#aaaaaa\")};\n`;\n\nconst TodoContent = styled.div`\n  flex: 1;\n  color: #ffffff;\n`;\n\nconst TodoButtons = styled.div``;\n\nconst DeleteButton = styled.button`\n  background-color: transparent;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  visibility: hidden;\n  & > * {\n    color: #ffffff;\n  }\n`;\n\nconst EditButton = styled(DeleteButton)`\n  margin-right: 12px;\n`;\n\nfunction Todo({ todo }) {\n  const dispatch = useDispatch();\n  return (\n    <TodoItemWrapper data-id={todo.id} isCompleted={todo.isCompleted}>\n      <Checkbutton\n        isCompleted={todo.isCompleted}\n        onClick={() => {\n          dispatch(toggleTodo(todo.id));\n        }}\n      >\n        {todo.isCompleted ? <FaCircle /> : <FaRegCircle />}\n      </Checkbutton>\n      <TodoContent>{todo.content}</TodoContent>\n      <TodoButtons>\n        <EditButton>\n          <FaEdit />\n        </EditButton>\n        <DeleteButton\n          onClick={() => {\n            dispatch(deleteTodo(todo.id));\n          }}\n        >\n          <FaRegTrashAlt />\n        </DeleteButton>\n      </TodoButtons>\n    </TodoItemWrapper>\n  );\n}\n\nexport default Todo;\n","import {\n  ADD_TODO,\n  TOGGLE_TODO,\n  DELETE_TODO,\n  FILTER_TODO,\n  CLEAR_TODO,\n} from \"./actionTypes\";\n\n// action creator returns an action (object)\nexport const addTodo = (content) => {\n  return {\n    type: ADD_TODO,\n    payload: {\n      content,\n    },\n  };\n};\n\nexport const toggleTodo = (id) => {\n  return {\n    type: TOGGLE_TODO,\n    payload: { id },\n  };\n};\n\nexport const deleteTodo = (id) => {\n  return {\n    type: DELETE_TODO,\n    payload: { id },\n  };\n};\n\nexport const filterTodo = (filter) => {\n  return {\n    type: FILTER_TODO,\n    payload: { filter },\n  };\n};\n\nexport const clearTodo = () => {\n  return {\n    type: CLEAR_TODO,\n  };\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FaPlus } from \"react-icons/fa\";\nimport { useDispatch } from \"react-redux\";\nimport { addTodo } from \"../redux/actionCreators\";\n\nconst Form = styled.form`\n  display: flex;\n  align-items: center;\n  background-color: #444444;\n  padding: 8px;\n  border-radius: 5px;\n  margin-bottom: 16px;\n`;\n\nconst AddButton = styled.button`\n  background-color: transparent;\n  outline: none;\n  border: none;\n  color: #ffffff;\n  cursor: pointer;\n`;\n\nconst TodoInputField = styled.input`\n  background-color: transparent;\n  outline: none;\n  border: none;\n  color: #ffffff;\n  padding: 8px 12px;\n`;\n\nfunction TodoForm() {\n  const [value, setValue] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (value.trim()) {\n      dispatch(addTodo(value));\n      setValue(\"\");\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <AddButton type=\"submit\">\n        <FaPlus />\n      </AddButton>\n      <TodoInputField\n        type=\"text\"\n        value={value}\n        onChange={handleInputChange}\n        placeholder=\"新增工作\"\n      />\n    </Form>\n  );\n}\n\nexport default TodoForm;\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport Todo from \"./components/Todo\";\nimport TodoForm from \"./components/TodoForm\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { filterTodo, clearTodo } from \"./redux/actionCreators\";\n\nconst TodoWrapper = styled.div`\n  width: 100%;\n  max-width: 600px;\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  padding: 20px;\n`;\n\nconst TodoList = styled.div``;\n\nconst StatusWrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\nconst AllTodo = styled.div`\n  cursor: pointer;\n`;\nconst CompletedTodo = styled.div`\n  cursor: pointer;\n`;\nconst IncompletedTodo = styled.div`\n  cursor: pointer;\n`;\nconst BtnClean = styled.div`\n  cursor: pointer;\n`;\n\n// Store in localStorage\nfunction StoreToLocalstorage(todos) {\n  window.localStorage.setItem(\"todos\", JSON.stringify(todos));\n}\n\nfunction App() {\n  const todos = useSelector((state) => state.todoState.todos);\n  console.log(todos);\n  const selectorFilters = useSelector((state) => state.filter.filter);\n  const dispatch = useDispatch();\n\n  // if todos is changed, the localstorage will be triggered\n  useEffect(() => {\n    StoreToLocalstorage(todos);\n  }, [todos]);\n\n  const handleFilter = (filter) => () => {\n    dispatch(filterTodo(filter));\n  };\n\n  const handleClearTodo = () => {\n    dispatch(clearTodo());\n  };\n\n  return (\n    <TodoWrapper>\n      <TodoForm />\n      <StatusWrapper>\n        <AllTodo onClick={handleFilter(\"all\")}>全部</AllTodo>\n        <CompletedTodo onClick={handleFilter(\"complete\")}>已完成</CompletedTodo>\n        <IncompletedTodo onClick={handleFilter(\"incomplete\")}>\n          未完成\n        </IncompletedTodo>\n        <BtnClean onClick={handleClearTodo}>清空所有項目</BtnClean>\n      </StatusWrapper>\n      <TodoList>\n        {todos &&\n          todos\n            .filter((todo) => {\n              switch (selectorFilters) {\n                case \"all\":\n                  return true;\n                case \"complete\":\n                  return todo.isCompleted;\n                case \"incomplete\":\n                  return !todo.isCompleted;\n                default:\n                  return true;\n              }\n            })\n            .map((todo) => <Todo todo={todo} key={todo.id} />)}\n      </TodoList>\n    </TodoWrapper>\n  );\n}\n\nexport default App;\n","import { ADD_TODO, TOGGLE_TODO, DELETE_TODO, CLEAR_TODO } from \"../actionTypes\";\n\nlet todoId;\n\nif (!window.localStorage.getItem(\"todos\")) {\n  todoId = 0;\n} else {\n  const dataLength = JSON.parse(window.localStorage.getItem(\"todos\")).length;\n  todoId = dataLength;\n}\n\nfunction initState() {\n  if (!window.localStorage.getItem(\"todos\")) return { todos: [] };\n  return { todos: JSON.parse(window.localStorage.getItem(\"todos\")) };\n}\n\nexport default function todoReducer(state = initState(), action) {\n  switch (action.type) {\n    case ADD_TODO: {\n      return {\n        ...state,\n        todos: [\n          ...state.todos,\n          {\n            id: todoId++,\n            content: action.payload.content,\n            isCompleted: false,\n          },\n        ],\n      };\n    }\n    case TOGGLE_TODO: {\n      return {\n        ...state,\n        todos: state.todos.map((todo) => {\n          if (todo.id !== action.payload.id) return todo;\n          return {\n            ...todo,\n            isCompleted: !todo.isCompleted,\n          };\n        }),\n      };\n    }\n    case DELETE_TODO: {\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== action.payload.id),\n      };\n    }\n    case CLEAR_TODO: {\n      return {\n        todos: [],\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { FILTER_TODO } from \"../actionTypes\";\n\n// set an initial value to filter\nconst initialState = {\n  filter: \"all\",\n};\n\nexport default function filtersReducer(state = initialState, action) {\n  switch (action.type) {\n    case FILTER_TODO: {\n      return {\n        ...state,\n        filter: action.payload.filter,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport todoReducer from \"./todos\";\nimport filtersReducer from \"./todoFilters\";\n\nexport default combineReducers({\n  todoState: todoReducer,\n  filter: filtersReducer,\n});\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers/\";\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}